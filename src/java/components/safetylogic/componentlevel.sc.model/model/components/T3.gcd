import Section
import Turnout

package t3

/** 
 * You have to be careful here, as there are two separate Turnouts with separate Control ports.
 * If you want them to change together (from Straight to Divergent and vice versa) send the turnout signals to both Turnouts!!!
 */
sync T3Component [
	// Ports on the borders of the zone
	port S20ProtocolProvidedCW : provides Protocol,
	port S20ProtocolRequiredCW : requires Protocol,	
	
	port S19ProtocolProvidedCW : provides Protocol,
	port S19ProtocolRequiredCW : requires Protocol,
	
	port S26ProtocolProvidedCCW : provides Protocol,
	port S26ProtocolRequiredCCW : requires Protocol,
	 
	port S30ProtocolProvidedCCW : provides Protocol,
	port S30ProtocolRequiredCCW : requires Protocol,
	
	// Control ports, needed for all elements
	port S20ControlProvided : provides SectionControl,
	port S19ControlProvided : provides SectionControl,
	port T3_1TurnoutProvided : provides TurnoutControl,
	port T3_2TurnoutProvided : provides TurnoutControl,
	port S26ControlProvided : provides SectionControl,
	port S30ControlProvided : provides SectionControl,
	
	// Train ports, needed for all elements
	port S20TrainProvided : provides Train,
	port S19TrainProvided : provides Train,
	port T3_1TrainProvided : provides Train,
	port T3_2TrainProvided : provides Train,
	port S26TrainProvided : provides Train,
	port S30TrainProvided : provides Train
] {
	component S20 : SectionStatechart
	component S19 : SectionStatechart
	component T3_1 : TurnoutStatechart
	component T3_2 : TurnoutStatechart
	component S26 : SectionStatechart
	component S30 : SectionStatechart
	
	// Binding system ports on the border to the elements
	bind S20ProtocolProvidedCW -> S20.ProtocolProvidedCW
	bind S20ProtocolRequiredCW -> S20.ProtocolRequiredCW	
				
	bind S19ProtocolProvidedCW -> S19.ProtocolProvidedCW
	bind S19ProtocolRequiredCW -> S19.ProtocolRequiredCW
				
	bind S26ProtocolProvidedCCW -> S26.ProtocolProvidedCCW
	bind S26ProtocolRequiredCCW -> S26.ProtocolRequiredCCW
				 
	bind S30ProtocolProvidedCCW -> S30.ProtocolProvidedCCW
	bind S30ProtocolRequiredCCW -> S30.ProtocolRequiredCCW			
			
	// Binding Control ports
	bind S20ControlProvided -> S20.SectionControlProvided
	bind S19ControlProvided -> S19.SectionControlProvided
	bind T3_1TurnoutProvided -> T3_1.TurnoutControlProvided
	bind T3_2TurnoutProvided -> T3_2.TurnoutControlProvided
	bind S26ControlProvided -> S26.SectionControlProvided
	bind S30ControlProvided -> S30.SectionControlProvided
				
	// Binding Train ports
	bind S20TrainProvided -> S20.TrainProvided
	bind S19TrainProvided -> S19.TrainProvided
	bind T3_1TrainProvided -> T3_1.TrainProvided
	bind T3_2TrainProvided -> T3_2.TrainProvided
	bind S26TrainProvided -> S26.TrainProvided
	bind S30TrainProvided -> S30.TrainProvided
			
	channel [T3_1.ProtocolProvidedDivergent] -o)- [T3_2.ProtocolRequiredDivergent]
	channel [T3_2.ProtocolProvidedDivergent] -o)- [T3_1.ProtocolRequiredDivergent]
				
	channel [S20.ProtocolProvidedCCW] -o)- [T3_1.ProtocolRequiredTop]
	channel [T3_1.ProtocolProvidedTop] -o)- [S20.ProtocolRequiredCCW]
				
	channel [S19.ProtocolProvidedCCW] -o)- [T3_2.ProtocolRequiredStraight]
	channel [T3_2.ProtocolProvidedStraight] -o)- [S19.ProtocolRequiredCCW]
				
	channel [S26.ProtocolProvidedCW] -o)- [T3_1.ProtocolRequiredStraight]
	channel [T3_1.ProtocolProvidedStraight] -o)- [S26.ProtocolRequiredCW]
				
	channel [S30.ProtocolProvidedCW] -o)- [T3_2.ProtocolRequiredTop]
	channel [T3_2.ProtocolProvidedTop] -o)- [S30.ProtocolRequiredCW]															
}
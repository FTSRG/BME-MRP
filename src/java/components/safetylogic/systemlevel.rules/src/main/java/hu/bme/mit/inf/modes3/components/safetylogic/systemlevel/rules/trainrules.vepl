package hu.bme.mit.inf.modes3.components.safetylogic.systemlevel.rules
import-queries hu.bme.mit.inf.safetylogic.rulepatterns.*

import hu.bme.mit.inf.modes3.components.safetylogic.systemlevel.rules.message.*

queryEvent trainOnStation() as trainOnStation found

queryEvent trainLeftStation() as trainOnStation lost

queryEvent noTrainOnStation() as noTrainOnStation found

queryEvent multipleTrainsOnStation() as multipleTrainsOnStation found

queryEvent noMultipleTrainsOnStation() as noTrainOnStation lost

complexEvent transfer() {
	as noTrainOnStation -> trainOnStation -> multipleTrainsOnStation -> noMultipleTrainsOnStation
}

complexEvent trainPassThroughStation() {
	as (trainOnStation -> trainLeftStation)[10000]
}

complexEvent threeTimesMet() {
	as multipleTrainsOnStation{3}
}

rule multipleTrainsOnStationRule on multipleTrainsOnStation {
	System.out.println("MULTIPLE TRAINS ON STATION!")
	EasterEggMessageSender.INSTANCE.sendMessage("MULTIPLE TRAINS ON STATION!")
}

rule trainPassedThroughStationRule on trainPassThroughStation {
	System.out.println("TRAIN PASSED THROUGH STATION!")
	EasterEggMessageSender.INSTANCE.sendMessage("TRAIN PASSED THROUGH STATION!")
}

rule transferRule on transfer {
	System.out.println("TRANSFER ON STATION!")
	EasterEggMessageSender.INSTANCE.sendMessage("TRANSFER ON STATION!")
}

rule threeTimesMetRule on threeTimesMet {
	System.out.println("THREE TIMES MET!")
	EasterEggMessageSender.INSTANCE.sendMessage("THREE TIMES MET!")
}
